package com.instagram.ui;

import java.awt.HeadlessException;

import javax.swing.JOptionPane;

import com.instagram.AppConfig;
import com.instagram.FileUtils;
import com.instagram.SeleniumWorker;
import com.instagram.Unfollower;
import com.instagram.Utils;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JTextArea;
import org.quartz.JobBuilder;
import org.quartz.JobDetail;
import org.quartz.Scheduler;
import org.quartz.SchedulerException;
import org.quartz.SchedulerFactory;
import org.quartz.SimpleScheduleBuilder;
import org.quartz.Trigger;
import org.quartz.TriggerBuilder;
import org.quartz.impl.StdSchedulerFactory;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author amishra
 */
public class InstaAutomationPanel extends javax.swing.JPanel {

    /**
     *
     */
    private static final long serialVersionUID = 1L;

    public AppConfig config;

    public SeleniumWorker worker;

    private boolean isSchedularOn = false;

    /**
     * Creates new form NewJPanel
     */
    public InstaAutomationPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        actionTabPanel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        jPanel5 = new javax.swing.JPanel();
        influencerNo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        waitMinutes2 = new javax.swing.JTextField();
        waitMinutes1 = new javax.swing.JTextField();
        followCount2 = new javax.swing.JTextField();
        unfollowDays = new javax.swing.JTextField();
        followCount1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        influencerListTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        sourceLogsTextArea = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        stopSearch = new javax.swing.JButton();
        startSearch = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        followerListTextArea = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        usersToFollowTextArea = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        followLogsTextArea = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        startFollowing = new javax.swing.JButton();
        stopFollow = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(944, 711));
        setMinimumSize(new java.awt.Dimension(944, 711));
        setPreferredSize(new java.awt.Dimension(944, 711));

        actionTabPanel.setBackground(new java.awt.Color(204, 255, 255));
        actionTabPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        actionTabPanel.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        actionTabPanel.setToolTipText("");
        actionTabPanel.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        actionTabPanel.setMaximumSize(new java.awt.Dimension(944, 711));
        actionTabPanel.setMinimumSize(new java.awt.Dimension(944, 711));
        actionTabPanel.setVerifyInputWhenFocusTarget(false);
        actionTabPanel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                actionTabPanelStateChanged(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Login");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Password");

        userName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userName)
                            .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        influencerNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                influencerNoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Quantity of users to crawl for each influencer");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(influencerNo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(influencerNo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Wait between");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("minutes and");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("minutes between each operation.");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Follow between");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("days.");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("people per operation.");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Automatically unfollow after");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("and");

        waitMinutes2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waitMinutes2ActionPerformed(evt);
            }
        });

        waitMinutes1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waitMinutes1ActionPerformed(evt);
            }
        });

        followCount2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                followCount2ActionPerformed(evt);
            }
        });

        unfollowDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unfollowDaysActionPerformed(evt);
            }
        });

        followCount1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                followCount1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(waitMinutes1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(waitMinutes2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(followCount1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(followCount2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(unfollowDays, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)))
                .addContainerGap(392, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(waitMinutes1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(waitMinutes2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(19, 19, 19)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(followCount1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(followCount2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(unfollowDays, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(19, 19, 19))
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Follow / Unfollow");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Sources");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(5, 5, 5)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
        );

        actionTabPanel.addTab("Settings", jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        influencerListTextArea.setColumns(20);
        influencerListTextArea.setRows(5);
        jScrollPane1.setViewportView(influencerListTextArea);

        sourceLogsTextArea.setColumns(20);
        sourceLogsTextArea.setRows(5);
        jScrollPane3.setViewportView(sourceLogsTextArea);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Logs");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Influencers (copy/paste your list)");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("These users follow the influencers (left list)");

        stopSearch.setBackground(new java.awt.Color(255, 0, 0));
        stopSearch.setText("STOP");
        stopSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopSearchActionPerformed(evt);
            }
        });

        startSearch.setBackground(new java.awt.Color(102, 204, 0));
        startSearch.setText("START");
        startSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startSearchActionPerformed(evt);
            }
        });

        followerListTextArea.setColumns(20);
        followerListTextArea.setRows(5);
        jScrollPane6.setViewportView(followerListTextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(startSearch, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addComponent(stopSearch)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        actionTabPanel.addTab("Sources", jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        usersToFollowTextArea.setColumns(20);
        usersToFollowTextArea.setRows(5);
        jScrollPane4.setViewportView(usersToFollowTextArea);

        followLogsTextArea.setColumns(20);
        followLogsTextArea.setRows(5);
        jScrollPane5.setViewportView(followLogsTextArea);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Logs");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Users to follow (copy/paste URLs from the sources tab)");

        startFollowing.setBackground(new java.awt.Color(102, 204, 0));
        startFollowing.setText("START");
        startFollowing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startFollowingActionPerformed(evt);
            }
        });

        stopFollow.setBackground(new java.awt.Color(255, 0, 0));
        stopFollow.setText("STOP");
        stopFollow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopFollowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 356, Short.MAX_VALUE)
                        .addComponent(startFollowing)
                        .addGap(35, 35, 35)
                        .addComponent(stopFollow)
                        .addGap(382, 382, 382))
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startFollowing, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopFollow, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addGap(38, 38, 38))
        );

        actionTabPanel.addTab("Follow", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(actionTabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(actionTabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void influencerNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_influencerNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_influencerNoActionPerformed

    private void userNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameActionPerformed

    private void startSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startSearchActionPerformed
        try {
            if (validateForm(config)) {
                worker = SeleniumWorker.getInstance(config);
                try {
                    List<String> list = getListFromTextArea(influencerListTextArea);
                    if (!list.isEmpty()) {
                        logSource("Getting influencers from list...");
                        Set<String> usersList = new HashSet<>(list); //TODO get it from textarea
                        logSource("Logging in to Instagram...");
                        worker.login();
                        logSource("Starting search for the followers...");
                        worker.searchFollowersForInfluenceList(usersList, config.getNoOfUsersEachInfluencer(), followerListTextArea, sourceLogsTextArea);
                    } else {
                        JOptionPane.showMessageDialog(null, "No influencer provided.");
                    }
                } catch (Exception e) {
                    logSource(e.getLocalizedMessage());
                }
            }
        } catch (HeadlessException e) {
            logSource(e.getLocalizedMessage());
        }
    }//GEN-LAST:event_startSearchActionPerformed

    private void stopSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopSearchActionPerformed
        close();
    }//GEN-LAST:event_stopSearchActionPerformed

    private void startFollowingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startFollowingActionPerformed
        try {
            if (validateForm(config)) {
                List<String> list = getListFromTextArea(usersToFollowTextArea);
                if (!list.isEmpty()) {
                    worker.login();
                    int listSize = list.size();
                    int count = 0, iteration = 1, totalLinks = listSize;
                    while (true) {
                        int actionLength = Utils.getRandom(config.getFollowCount1(), config.getFollowCount2());
                        int waitInMinutes = Utils.getRandom(config.getWaitMinutes1(), config.getWaitMinutes2());
                        Utils.appendText(followLogsTextArea, "Following " + actionLength + " people in iteration " + iteration);
                        if (actionLength > listSize) {
                            actionLength = listSize;
                        }

                        for (int ii = count; ii <= actionLength; ii++, count++) {
                            String userProfileLink = list.get(ii);
                            try {
                                worker.followUnfollowUsers(userProfileLink, "follow", followLogsTextArea);
                                FileUtils util = new FileUtils();
                                util.writeFollowedInFile(userProfileLink);
                                logFollow("Following: " + userProfileLink);
                            } catch (Exception e) {
                                //Not followed
                                logFollow("Error in Following '" + userProfileLink + "' : " + e.getMessage());
                            }
                        }

                        listSize = listSize - actionLength;

                        if (listSize <= 0) {
                            Utils.appendText(followLogsTextArea, "Program has done following " + totalLinks + "people in the list");
                            break;
                        } else {
                            Utils.appendText(followLogsTextArea, "Waiting " + waitInMinutes + " minutes after iteration " + iteration);
                            Utils.sleep(waitInMinutes);
                        }
                        iteration++;
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "No users to follow.");
                }
            }
            if (!isSchedularOn) {
                this.isSchedularOn = true;
                runUnfollowScheduler();
            }

        } catch (HeadlessException e) {
            logFollow(e.getLocalizedMessage());
        }
    }//GEN-LAST:event_startFollowingActionPerformed

    private void stopFollowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopFollowActionPerformed
        close();
    }//GEN-LAST:event_stopFollowActionPerformed

    private void actionTabPanelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_actionTabPanelStateChanged
        try {
            int index = actionTabPanel.getSelectedIndex();
            if (index == 1 || index == 2) {
                config = getAppConfig();
            }
        } catch (NumberFormatException e) {
            logSource(e.getLocalizedMessage());
        }
    }//GEN-LAST:event_actionTabPanelStateChanged

    private void waitMinutes2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waitMinutes2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waitMinutes2ActionPerformed

    private void waitMinutes1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waitMinutes1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waitMinutes1ActionPerformed

    private void followCount2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_followCount2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_followCount2ActionPerformed

    private void unfollowDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unfollowDaysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unfollowDaysActionPerformed

    private void followCount1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_followCount1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_followCount1ActionPerformed

    private void runUnfollowScheduler() {
        try {
            // specify the job' s details..
            JobDetail job = JobBuilder.newJob(Unfollower.class).withIdentity("testJob").build();
            job.getJobDataMap().put("config", config);
            job.getJobDataMap().put("textArea", followLogsTextArea);
            // specify the running period of the job
            Trigger trigger = TriggerBuilder.newTrigger()
                    .withSchedule(SimpleScheduleBuilder.simpleSchedule()
                            .withIntervalInHours(24).repeatForever()).build();

            //schedule the job
            SchedulerFactory schFactory = new StdSchedulerFactory();
            Scheduler sch = schFactory.getScheduler();
            sch.start();
            sch.scheduleJob(job, trigger);

        } catch (SchedulerException e) {
            e.printStackTrace();
        }
    }

    private AppConfig getAppConfig() {
        AppConfig conf = null;
        try {
            conf = new AppConfig();
            conf.setUserId(userName.getText());
            conf.setPassword(String.valueOf(password.getPassword()));

            String influencers = influencerNo.getText().trim();
            conf.setNoOfUsersEachInfluencer(influencers.isEmpty() ? 0 : Integer.parseInt(influencers));

            String w1 = waitMinutes1.getText().trim();
            conf.setWaitMinutes1(w1.isEmpty() ? 0 : Integer.parseInt(w1));

            String w2 = waitMinutes2.getText().trim();
            conf.setWaitMinutes2(w2.isEmpty() ? 0 : Integer.parseInt(w2));

            String f1 = followCount1.getText().trim();
            conf.setFollowCount1(f1.isEmpty() ? 0 : Integer.parseInt(f1));

            String f2 = followCount2.getText().trim();
            conf.setFollowCount2(f2.isEmpty() ? 0 : Integer.parseInt(f2));

            String unfollowDuration = unfollowDays.getText();
            conf.setUnfollowAfterDays(unfollowDuration.isEmpty() ? 0 : Integer.parseInt(unfollowDuration));
        } catch (NumberFormatException e) {
            logSource(e.getLocalizedMessage());
        }
        return conf;
    }

    private void logSource(String log) {
        Utils.appendText(sourceLogsTextArea, log);
    }

    private void logFollow(String log) {
        Utils.appendText(followLogsTextArea, log);
    }

    public boolean validateForm(AppConfig config) {
        if (config.getUserId().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "User Name is empty.");
            actionTabPanel.setSelectedIndex(0);
            return false;
        } else if (config.getPassword().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Password field is empty.");
            actionTabPanel.setSelectedIndex(0);
            return false;
        } else if (config.getNoOfUsersEachInfluencer() == 0) {
            JOptionPane.showMessageDialog(null, "'Quantity of users' field is empty.");
            actionTabPanel.setSelectedIndex(0);
            return false;
        } else if (config.getWaitMinutes1() == 0) {
            JOptionPane.showMessageDialog(null, "'Wait value 1' field is empty.");
            actionTabPanel.setSelectedIndex(0);
            return false;
        } else if (config.getWaitMinutes2() == 0) {
            JOptionPane.showMessageDialog(null, "'Wait value 2' field is empty.");
            actionTabPanel.setSelectedIndex(0);
            return false;
        } else if (config.getFollowCount1() == 0) {
            JOptionPane.showMessageDialog(null, "'Follow count 1' field is empty.");
            actionTabPanel.setSelectedIndex(0);
            return false;
        } else if (config.getFollowCount2() == 0) {
            JOptionPane.showMessageDialog(null, "'Follow count 2' field is empty.");
            actionTabPanel.setSelectedIndex(0);
            return false;
        } else if (config.getUnfollowAfterDays() == 0) {
            JOptionPane.showMessageDialog(null, "'No. of unfollow days' field is empty.");
            actionTabPanel.setSelectedIndex(0);
            return false;
        }
        return true;
    }

    public List<String> getListFromTextArea(JTextArea textArea) {

        if (textArea.getText().trim().isEmpty()) {
            return new ArrayList<>();
        } else {
            String s[] = textArea.getText().split("\\r?\\n");
            return new ArrayList<>(Arrays.asList(s));
        }
    }

    public void close() {
        if (worker != null) {
            worker.closeDriver();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane actionTabPanel;
    private javax.swing.JTextField followCount1;
    private javax.swing.JTextField followCount2;
    private javax.swing.JTextArea followLogsTextArea;
    private javax.swing.JTextArea followerListTextArea;
    private javax.swing.JTextArea influencerListTextArea;
    private javax.swing.JTextField influencerNo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextArea sourceLogsTextArea;
    private javax.swing.JButton startFollowing;
    private javax.swing.JButton startSearch;
    private javax.swing.JButton stopFollow;
    private javax.swing.JButton stopSearch;
    private javax.swing.JTextField unfollowDays;
    private javax.swing.JTextField userName;
    private javax.swing.JTextArea usersToFollowTextArea;
    private javax.swing.JTextField waitMinutes1;
    private javax.swing.JTextField waitMinutes2;
    // End of variables declaration//GEN-END:variables
}
